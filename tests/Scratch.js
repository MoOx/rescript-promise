// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var $$Promise = require("../src/Promise.js");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var TestError = Caml_exceptions.create("Scratch.TestError");

var asyncParseFail = (function() {
    return new Promise((resolve, reject) => {
      var result = JSON.parse("{..");
      return resolve(result);
    })
  });

var throwPlainValue = (function() { 
 throw "test" 
 });

$$Promise.$$catch($$Promise.flatThen($$Promise.$$then($$Promise.$$then($$Promise.resolve("hello"), $$Promise.resolve), (function (p) {
                return $$Promise.$$then(p, (function (param) {
                              return "test";
                            }));
              })), (function (param) {
            return $$Promise.$$catch($$Promise.$$then(Curry._1(asyncParseFail, undefined), (function (v) {
                              return {
                                      TAG: /* Ok */0,
                                      _0: v
                                    };
                            })), (function (e) {
                          return {
                                  TAG: /* Error */1,
                                  _0: e
                                };
                        }));
          })), (function (e) {
        return {
                TAG: /* Error */1,
                _0: e
              };
      }));

$$Promise.$$then($$Promise.$$catch($$Promise.flatThen($$Promise.resolve(undefined), (function (param) {
                console.log("unreachable");
                return Curry._1(asyncParseFail, undefined);
              })), (function (e) {
            console.log("error", e);
            return "test";
          })), (function (v) {
        console.log("result: ", v);
        
      }));

exports.TestError = TestError;
exports.asyncParseFail = asyncParseFail;
exports.throwPlainValue = throwPlainValue;
/*  Not a pure module */
